swagger: "2.0"
info:
  version: "0.0.1"
  title: NRTS PRC API
host: localhost:3000
basePath: /api
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.
  
  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
  
  
     The following syntax must be used in the 'Authorization' header :
  
         Bearer xxxxxx.yyyyyyy.zzzzzz

consumes:
  - application/json
produces:
  - application/json

definitions:
  Authentication:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"

### Application Definitions
  AppId:
    type: object
    properties:
      _id:
        type: string
        example: "54759eb3c090d83494e2d804"
  AppObject:
    type: object
    properties:
      _id:
        type: string
        example: "54759eb3c090d83494e2d804"
      tags:
        type: string
        example: "[['public']]"
        ## TODO: Add more fields here.
  Application:
    type: string
    description: "Optional fields to return."
    example: name|type
    #TODO: Fix enums
    enum: &applicationFields
      - name
      - type
      - subtype
      - purpose
      - subpurpose
      - proponent
      - latitude
      - longitude
      - location
      - region
      - description
      - legalDescription
      - businessUnit
      - cl_files
      - commodityType
      - commodity
      - commodities
### Document Definitions
  DocId:
    type: object
    properties:
      displayName:
        type: string
        example: "A cool document"
  DocObject:
    type: object
    properties:
      displayName:
        type: string
        example: "A cool document"
        ## TODO: Add more fields here.
  DocumentFields:
    type: string
    description: "Optional fields to return."
    example: name|type
    #TODO: Fix enums
    enum: &documentFields
      - displayName
      - documentFileName
      - internalURL
      - internalMime

### Resource Definitions
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string

### Path Definitions
paths:

  /login/token:
    x-swagger-router-controller: login
    options:
      operationId: loginOptions
      description: "Options for Login"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
    post:
      operationId: loginPost
      description: "Get a JWT in order to access certain protected routes."
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /application:
    x-swagger-router-controller: application
    options:
      operationId: protectedOptions
      description: "Options on Application Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: protectedPost
      description: "Create a new application object."
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - write:application
      parameters:
        - name: app
          in: body
          required: true
          schema:
            $ref: "#/definitions/AppId"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      operationId: protectedGet
      description: "Authenticated access to retreiving applications."
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - in: query
          name: fields
          description: "Application fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *applicationFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /application/{appId}:
    x-swagger-router-controller: application
    options:
      operationId: protectedOptions
      description: "Options on Application GET Route"
      parameters:
        - name: appId
          in: path
          description: "ID of application to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      operationId: protectedGet
      description: "Authenticated access to retreiving applications."
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: appId
          in: path
          description: "ID of application to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Application fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *applicationFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: protectedPut
      description: "Update an application object."
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - sysadmin
        - write:application
      parameters:
        - name: appId
          in: path
          description: "ID of application to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/application:
    x-swagger-router-controller: application
    options:
      operationId: protectedOptions
      description: "Options on Application Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      operationId: publicGet
      description: "Retreiving public applications."
      parameters:
        - in: query
          name: fields
          description: "Application fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *applicationFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/application/{appId}:
    x-swagger-router-controller: application
    options:
      operationId: protectedOptions
      description: "Options on Application GET Route"
      parameters:
        - name: appId
          in: path
          description: "ID of application to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      operationId: publicGet
      description: "Public access to retreiving applications."
      parameters:
        - name: appId
          in: path
          description: "ID of application to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Application fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *applicationFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

## Documents
  /document:
    x-swagger-router-controller: document
    options:
      operationId: protectedOptions
      description: "Options on Document Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: protectedPost
      description: "Create a new document object."
      summary: "Create a new document object."
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - write:document
      parameters:
        - name: doc
          in: body
          required: true
          schema:
            $ref: "#/definitions/DocId"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      operationId: protectedGet
      description: "Authenticated access to retreiving a document."
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - in: query
          name: fields
          description: "Document fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *documentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /document/{docId}:
    x-swagger-router-controller: document
    options:
      operationId: protectedOptions
      description: "Options on Document GET Route"
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      operationId: protectedGet
      description: "Authenticated access to retreiving a document."
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Document fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *documentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: protectedPut
      description: "Update an document object."
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - sysadmin
        - write:document
      consumes:
        - multipart/form-data
      parameters:
        - name: docId
          in: path
          description: "ID of document to update"
          required: true
          type: "string"
        - name: upfile
          in: formData
          description: "The file to upload."
          required: true
          type: file
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/document:
    x-swagger-router-controller: document
    options:
      operationId: protectedOptions
      description: "Options on Document Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      operationId: publicGet
      description: "Retreiving public documents."
      parameters:
        - in: query
          name: fields
          description: "Document fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *documentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/document/{docId}:
    x-swagger-router-controller: document
    options:
      operationId: protectedOptions
      description: "Options on Document GET Route"
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      operationId: publicGet
      description: "Public access to retreiving documents."
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Document fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *documentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

